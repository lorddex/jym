<project xmlns:ivy="antlib:org.apache.ivy.ant" name="jym" default="test.unit">

	<target name="init" description="init variables">
		<property name="project.name" value="${ant.project.name}" />
		<property name="project.version" value="0.1" />
		
		<property name="src.dir" value="src/"/>
		<property name="build.dir" value="build"/>
		<property name="jar.build.dir" value="build/jar"/>
		<property name="lib.dir" value="lib/"/>
		<property name="conf.dir" value="configuration"/>
		<property name="ivy.dep.file" value="${conf.dir}/ivy.xml"/>
		<property name="classes.build.dir" value="${build.dir}/classes"/>
		<property name="test.classes.build.dir" value="${build.dir}/tests"/>
		<property name="reports.build.dir" value="${build.dir}/reports"/>
		<property name="test.reports.build.dir" value="${reports.build.dir}/test"/>
		<property name="docs.build.dir" value="${build.dir}/docs"/>
		<property name="api.docs.build.dir" value="${docs.build.dir}/api"/>
		<property name="config.dir" value="configuration/"/>
		
		<!-- calculating build number -->
		<buildnumber file="${conf.dir}/build.num"/>
		
		<!-- calculating timestamp -->
		<tstamp>
	      <format property="timestamp" pattern="yyyy-MM-dd.hh:mm:ssaa"
	          unit="hour"/>
	    </tstamp>
		
		<!-- calculating commit revision (GIT)-->
		<exec executable="/usr/bin/git" failifexecutionfails="no" outputproperty="git.revision.no">
        	<arg value="log" />
    	    <arg value="-1" />
    	    <arg value="--pretty=format:%h" />
        </exec>
		
		<!-- calculating commit revision (SVN)-->
        <exec executable="/usr/local/bin/svnversion" failifexecutionfails="no" outputproperty="svn.revision.no">
            <arg value="-n"/>
            <arg value="."/>
        </exec>
	</target>

	<target name="prepare" depends="init" description="create files and folders">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${jar.build.dir}"/>
		<mkdir dir="${classes.build.dir}"/>
		<mkdir dir="${test.classes.build.dir}"/>
		<mkdir dir="${reports.build.dir}"/>
		<mkdir dir="${test.reports.build.dir}"/>
		<mkdir dir="${docs.build.dir}"/>
		<mkdir dir="${api.docs.build.dir}"/>
	</target>

	<target name="clean" depends="prepare" description="clean classes">
		<delete includeemptydirs="true">
			<fileset dir="${build.dir}"/>
		</delete>
	</target>

	<target name="dep.clean" depends="init" description="clean libs">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${lib.dir}"/>
		</delete>
	</target>

	<target name="dep.resolve" depends="init" description="retrieve dependencies with ivy">
		<ivy:resolve file="${ivy.dep.file}"/>
	</target>

	<target name="dep.update" depends="dep.resolve">
		<ivy:retrieve pattern="lib/[conf]/[artifact]-[revision].[ext]" sync="true" conf="compile,test,runtime,test-compile,provided" />
	</target>

	<target name="dep.update.local" depends="">
			<ivy:retrieve pattern="lib/[conf]/[artifact]-[revision].[ext]" sync="true" conf="compile,test,runtime,test-compile,provided" />
	</target>
	
	<target name="compile" depends="compile.classes,compile.test">
	</target>
	
	<target name="compile.classes" depends="prepare" description="create class files">
		<javac srcdir="${src.dir}" destdir="${classes.build.dir}" excludes="**/test/**" fork="true" source="1.7" target="1.7" includeantruntime="false">
			<classpath>
				<fileset dir="${lib.dir}/compile/">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<path id="build.class.path"> 
			<pathelement path="${classes.build.dir}"/>
		</path>
	</target>

	<target name="compile.test" depends="compile.classes" description="create class files for tests">
		<javac srcdir="${src.dir}" destdir="${test.classes.build.dir}" includes="**/test/**" fork="true" source="1.7" target="1.7" includeantruntime="false">
			<classpath>
				<fileset dir="${lib.dir}/test-compile/">
					<include name="*.jar"/>
				</fileset>
			</classpath>
		</javac>
		<path id="test.build.class.path"> 
			<pathelement path="${test.classes.build.dir}"/>
		</path>
	</target>
	
	<target name="test.unit" depends="compile" description="test units">
		<junit printsummary="yes" haltonfailure="yes">
		<classpath>
			<fileset dir="${lib.dir}/test/">
				<include name="*.jar"/>
			</fileset>
			<pathelement path="${build.class.path}"/>
			<pathelement path="${test.classes.build.dir}"/>
			<pathelement path="${config.dir}/i18n" />
			<pathelement path="${config.dir}/preferences/test" />
		</classpath>

        <test name="org.ldlabs.jym.maze.impl.test.MazeGameTest" haltonfailure="no" todir="${test.reports.build.dir}">
			<formatter type="xml"/>
		</test>

		<test name="org.ldlabs.jym.patterns.creational.abstractfactory.test.MazeFactoryTest" haltonfailure="no" todir="${test.reports.build.dir}">
			<formatter type="xml"/>
		</test>
			
		<test name="org.ldlabs.jym.patterns.creational.singleton.test.MazeSingletonTest" haltonfailure="no" todir="${test.reports.build.dir}">
			<formatter type="xml"/>
		</test>	
			
		<test name="org.ldlabs.commons.impl.test.ConfigurationTest" haltonfailure="no" todir="${test.reports.build.dir}">
			<formatter type="xml"/>
		</test>
	
		<test name="org.ldlabs.commons.impl.test.I18NTest" haltonfailure="no" todir="${test.reports.build.dir}">
			<formatter type="xml"/>
		</test>	
			
		</junit>
	</target>
	
	<target name="documentation" depends="prepare">
		<javadoc destdir="${api.docs.build.dir}" author="true" version="true" use="true">
		    <fileset dir="${src.dir}" excludes="**/test/**">
		    </fileset>
		</javadoc>
	</target>
	
	<target name="all" depends="test.unit,documentation">
	</target>

	<target name="jar" depends="compile">
		<jar basedir="${classes.build.dir}" destfile="${build.dir}/jar/${project.name}-${project.version}.jar">
			<manifest>
				<attribute name="Built-Date" value="${timestamp}" />
				<attribute name="Implementation-Version" value="${project.version}-r${git.revision.no}-b${build.number}" />
				<attribute name="Implementation-Title" value="${project.name}" />
			</manifest>
		</jar>
		<jar basedir="${config.dir}" destfile="${build.dir}/jar/${project.name}-config-test-${project.version}.jar">
			<manifest>
				<attribute name="Built-Date" value="${timestamp}" />
				<attribute name="Implementation-Version" value="${project.version}-r${git.revision.no}-b${build.number}" />
				<attribute name="Implementation-Title" value="${project.name}" />
			</manifest>
		</jar>
	</target>
	
</project>
